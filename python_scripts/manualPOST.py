import socket

#HOST = socket.getaddrinfo("http://soundofsilence.challs.olicyber.it/", 80)
#HOST = socket.gethostbyname("localhost")

#PORT = 80

packet = b"""
\x14\x14\x59\xd2\x65\xc0\xc8\xd3\xff\xe1\xde\xcd\x08\x00\x45\x00
\x02\xd1\x75\x19\x40\x00\x80\x06\x00\x00\xc0\xa8\x01\x0a\xa8\x77
\xb2\xcc\xf2\xc4\x00\x50\x5a\x86\x43\x4a\x7c\xf6\xbf\xe9\x50\x18
\x04\x00\x1f\xba\x00\x00\x50\x4f\x53\x54\x20\x2f\x20\x48\x54\x54
\x50\x2f\x31\x2e\x31\x0d\x0a\x48\x6f\x73\x74\x3a\x20\x73\x6f\x75
\x6e\x64\x6f\x66\x73\x69\x6c\x65\x6e\x63\x65\x2e\x63\x68\x61\x6c
\x6c\x73\x2e\x6f\x6c\x69\x63\x79\x62\x65\x72\x2e\x69\x74\x0d\x0a
\x43\x6f\x6e\x6e\x65\x63\x74\x69\x6f\x6e\x3a\x20\x6b\x65\x65\x70
\x2d\x61\x6c\x69\x76\x65\x0d\x0a\x43\x6f\x6e\x74\x65\x6e\x74\x2d
\x4c\x65\x6e\x67\x74\x68\x3a\x20\x37\x0d\x0a\x43\x61\x63\x68\x65
\x2d\x43\x6f\x6e\x74\x72\x6f\x6c\x3a\x20\x6d\x61\x78\x2d\x61\x67
\x65\x3d\x30\x0d\x0a\x4f\x72\x69\x67\x69\x6e\x3a\x20\x68\x74\x74
\x70\x3a\x2f\x2f\x73\x6f\x75\x6e\x64\x6f\x66\x73\x69\x6c\x65\x6e
\x63\x65\x2e\x63\x68\x61\x6c\x6c\x73\x2e\x6f\x6c\x69\x63\x79\x62
\x65\x72\x2e\x69\x74\x0d\x0a\x55\x70\x67\x72\x61\x64\x65\x2d\x49
\x6e\x73\x65\x63\x75\x72\x65\x2d\x52\x65\x71\x75\x65\x73\x74\x73
\x3a\x20\x31\x0d\x0a\x44\x4e\x54\x3a\x20\x31\x0d\x0a\x43\x6f\x6e
\x74\x65\x6e\x74\x2d\x54\x79\x70\x65\x3a\x20\x61\x70\x70\x6c\x69
\x63\x61\x74\x69\x6f\x6e\x2f\x78\x2d\x77\x77\x77\x2d\x66\x6f\x72
\x6d\x2d\x75\x72\x6c\x65\x6e\x63\x6f\x64\x65\x64\x0d\x0a\x55\x73
\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c
\x61\x2f\x35\x2e\x30\x20\x28\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e
\x54\x20\x31\x30\x2e\x30\x3b\x20\x57\x69\x6e\x36\x34\x3b\x20\x78
\x36\x34\x29\x20\x41\x70\x70\x6c\x65\x57\x65\x62\x4b\x69\x74\x2f
\x35\x33\x37\x2e\x33\x36\x20\x28\x4b\x48\x54\x4d\x4c\x2c\x20\x6c
\x69\x6b\x65\x20\x47\x65\x63\x6b\x6f\x29\x20\x43\x68\x72\x6f\x6d
\x65\x2f\x31\x30\x33\x2e\x30\x2e\x30\x2e\x30\x20\x53\x61\x66\x61
\x72\x69\x2f\x35\x33\x37\x2e\x33\x36\x0d\x0a\x41\x63\x63\x65\x70
\x74\x3a\x20\x74\x65\x78\x74\x2f\x68\x74\x6d\x6c\x2c\x61\x70\x70
\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x78\x68\x74\x6d\x6c\x2b\x78
\x6d\x6c\x2c\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x78
\x6d\x6c\x3b\x71\x3d\x30\x2e\x39\x2c\x69\x6d\x61\x67\x65\x2f\x61
\x76\x69\x66\x2c\x69\x6d\x61\x67\x65\x2f\x77\x65\x62\x70\x2c\x69
\x6d\x61\x67\x65\x2f\x61\x70\x6e\x67\x2c\x2a\x2f\x2a\x3b\x71\x3d
\x30\x2e\x38\x2c\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f
\x73\x69\x67\x6e\x65\x64\x2d\x65\x78\x63\x68\x61\x6e\x67\x65\x3b
\x76\x3d\x62\x33\x3b\x71\x3d\x30\x2e\x39\x0d\x0a\x52\x65\x66\x65
\x72\x65\x72\x3a\x20\x68\x74\x74\x70\x3a\x2f\x2f\x73\x6f\x75\x6e
\x64\x6f\x66\x73\x69\x6c\x65\x6e\x63\x65\x2e\x63\x68\x61\x6c\x6c
\x73\x2e\x6f\x6c\x69\x63\x79\x62\x65\x72\x2e\x69\x74\x2f\x0d\x0a
\x41\x63\x63\x65\x70\x74\x2d\x45\x6e\x63\x6f\x64\x69\x6e\x67\x3a
\x20\x67\x7a\x69\x70\x2c\x20\x64\x65\x66\x6c\x61\x74\x65\x0d\x0a
\x41\x63\x63\x65\x70\x74\x2d\x4c\x61\x6e\x67\x75\x61\x67\x65\x3a
\x20\x69\x74\x2d\x49\x54\x2c\x69\x74\x3b\x71\x3d\x30\x2e\x39\x2c
\x65\x6e\x2d\x55\x53\x3b\x71\x3d\x30\x2e\x38\x2c\x65\x6e\x3b\x71
\x3d\x30\x2e\x37\x0d\x0a\x0d\x0a\x69\x6e\x70\x75\x74\x3d\x00\x30
"""

class Netcat:
    # Python 'netcat like' module

    def __init__(self, ip, port):
        self.buff = b''
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.connect((ip, port))

    def read(self, length=1024):
        # Read 1024 bytes off the socket
        return self.socket.recv(length)
 
    def read_all(self, data=b'\n'):
        # Read data into the buffer until we have data
        while not data in self.buff:
            self.buff += self.socket.recv(1024)

        print('DEBUG=')
        print(self.buff)
        #pos = self.buff.find(data)
        #rval = self.buff[:pos + len(data)]
        #self.buff = self.buff[pos + len(data):]
 
        return self.buff
 
    def write(self, data):
        self.socket.send(data)
    
    def close(self):
        self.socket.close()

#s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
nc = Netcat("http://soundofsilence.challs.olicyber.it/", 80)
s = nc.read_all
print(s)

#s.sendall(packet)
#data = s.recvall(2048)